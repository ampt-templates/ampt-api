import { CustomPrettify } from "../types.js";
import { prettify as unknownError } from "./unknown-error/index.js";
import { prettify as additionalProperties } from "./additional-properties/index.js";
import { prettify as anyOf } from "./any-of/index.js";
import { prettify as arraySize } from "./array-size/index.js";
import { prettify as comparison } from "./comparison/index.js";
import { prettify as _enum } from "./enum/index.js";
import { prettify as format } from "./format/index.js";
import { prettify as ifThenElse } from "./if-then-else/index.js";
import { prettify as multipleOf } from "./multiple-of/index.js";
import { prettify as pattern } from "./pattern/index.js";
import { prettify as required } from "./required/index.js";
import { prettify as stringSize } from "./string-size/index.js";
import { prettify as type } from "./type/index.js";
import { prettify as unique } from "./unique/index.js";
declare const allHandlers: {
    unknownError: typeof unknownError;
    additionalProperties: typeof additionalProperties;
    anyOf: typeof anyOf;
    not: typeof anyOf;
    maxItems: typeof arraySize;
    minItems: typeof arraySize;
    maximum: typeof comparison;
    exclusiveMaximum: typeof comparison;
    minimum: typeof comparison;
    exclusiveMinimum: typeof comparison;
    const: typeof _enum;
    enum: typeof _enum;
    format: typeof format;
    if: typeof ifThenElse;
    multipleOf: typeof multipleOf;
    pattern: typeof pattern;
    required: typeof required;
    maxLength: typeof stringSize;
    minLength: typeof stringSize;
    type: typeof type;
    uniqueItems: typeof unique;
};
export type Handlers = {
    [keyword in keyof typeof allHandlers]: CustomPrettify;
};
export declare const handlers: Handlers;
export {};
